{"type": "bundle", "id": "bundle--ac784cc4-476a-4dfd-b7a3-582a47a3e913", "objects": [{"type": "attack-pattern", "spec_version": "2.1", "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b", "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "created": "2020-03-02T18:45:07.892Z", "modified": "2022-05-11T14:00:00.188Z", "name": "Phishing", "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "initial-access"}], "external_references": [{"source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1566", "external_id": "T1566"}, {"source_name": "capec", "url": "https://capec.mitre.org/data/definitions/98.html", "external_id": "CAPEC-98"}, {"source_name": "Microsoft Anti Spoofing", "description": "Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.", "url": "https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide"}, {"source_name": "ACSC Email Spoofing", "description": "Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.", "url": "https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf"}], "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"], "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Philip Winther"], "x_mitre_data_sources": ["File: File Creation", "Network Traffic: Network Traffic Content", "Network Traffic: Network Traffic Flow", "Application Log: Application Log Content"], "x_mitre_detection": "Network intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nBecause most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Many possible detections of follow-on behavior may take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "x_mitre_platforms": ["Linux", "macOS", "Windows", "SaaS", "Office 365", "Google Workspace"], "x_mitre_version": "2.2"}, {"type": "attack-pattern", "spec_version": "2.1", "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5", "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "created": "2018-04-18T17:59:24.739Z", "modified": "2022-05-11T14:00:00.188Z", "name": "User Execution", "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary, or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204). For example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}], "external_references": [{"source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1204", "external_id": "T1204"}, {"source_name": "Telephone Attack Delivery", "description": "Selena Larson, Sam Scholten, Timothy Kromphardt. (2021, November 4). Caught Beneath the Landline: A 411 on Telephone Oriented Attack Delivery. Retrieved January 5, 2022.", "url": "https://www.proofpoint.com/us/blog/threat-insight/caught-beneath-landline-411-telephone-oriented-attack-delivery"}], "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"], "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Oleg Skulkin, Group-IB"], "x_mitre_data_sources": ["Container: Container Creation", "Network Traffic: Network Connection Creation", "Container: Container Start", "Instance: Instance Creation", "Instance: Instance Start", "Image: Image Creation", "Process: Process Creation", "Network Traffic: Network Traffic Content", "Command: Command Execution", "Application Log: Application Log Content", "File: File Creation"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "x_mitre_platforms": ["Linux", "Windows", "macOS", "IaaS", "Containers"], "x_mitre_remote_support": false, "x_mitre_version": "1.5"}, {"type": "attack-pattern", "spec_version": "2.1", "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5", "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "created": "2018-04-18T17:59:24.739Z", "modified": "2022-05-11T14:00:00.188Z", "name": "User Execution", "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary, or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204). For example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}], "external_references": [{"source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1204", "external_id": "T1204"}, {"source_name": "Telephone Attack Delivery", "description": "Selena Larson, Sam Scholten, Timothy Kromphardt. (2021, November 4). Caught Beneath the Landline: A 411 on Telephone Oriented Attack Delivery. Retrieved January 5, 2022.", "url": "https://www.proofpoint.com/us/blog/threat-insight/caught-beneath-landline-411-telephone-oriented-attack-delivery"}], "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"], "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Oleg Skulkin, Group-IB"], "x_mitre_data_sources": ["Container: Container Creation", "Network Traffic: Network Connection Creation", "Container: Container Start", "Instance: Instance Creation", "Instance: Instance Start", "Image: Image Creation", "Process: Process Creation", "Network Traffic: Network Traffic Content", "Command: Command Execution", "Application Log: Application Log Content", "File: File Creation"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "x_mitre_platforms": ["Linux", "Windows", "macOS", "IaaS", "Containers"], "x_mitre_remote_support": false, "x_mitre_version": "1.5"}, {"type": "attack-pattern", "spec_version": "2.1", "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "created": "2017-05-31T21:30:49.546Z", "modified": "2022-05-11T14:00:00.188Z", "name": "Command and Scripting Interpreter", "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}], "external_references": [{"source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1059", "external_id": "T1059"}, {"source_name": "Remote Shell Execution in Python", "description": "Abdou Rockikz. (2020, July). How to Execute Shell Commands in a Remote Machine in Python. Retrieved July 26, 2021.", "url": "https://www.thepythoncode.com/article/executing-bash-commands-remotely-in-python"}, {"source_name": "Cisco IOS Software Integrity Assurance - Command History", "description": "Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Command History. Retrieved October 21, 2020.", "url": "https://tools.cisco.com/security/center/resources/integrity_assurance.html#23"}, {"source_name": "Powershell Remote Commands", "description": "Microsoft. (2020, August 21). Running Remote Commands. Retrieved July 26, 2021.", "url": "https://docs.microsoft.com/en-us/powershell/scripting/learn/remoting/running-remote-commands?view=powershell-7.1"}], "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"], "x_mitre_attack_spec_version": "2.1.0", "x_mitre_data_sources": ["Process: Process Creation", "Module: Module Load", "Process: Process Metadata", "Script: Script Execution", "Command: Command Execution"], "x_mitre_deprecated": false, "x_mitre_detection": "Command-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\n\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "x_mitre_platforms": ["Linux", "macOS", "Windows", "Network"], "x_mitre_remote_support": true, "x_mitre_version": "2.3"}, {"type": "attack-pattern", "spec_version": "2.1", "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "created": "2017-05-31T21:30:32.662Z", "modified": "2022-11-08T14:00:00.188Z", "name": "Obfuscated Files or Information", "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "external_references": [{"source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1027", "external_id": "T1027"}, {"source_name": "Volexity PowerDuke November 2016", "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.", "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"}, {"source_name": "GitHub Revoke-Obfuscation", "description": "Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.", "url": "https://github.com/danielbohannon/Revoke-Obfuscation"}, {"source_name": "FireEye Obfuscation June 2017", "description": "Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.", "url": "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html"}, {"source_name": "FireEye Revoke-Obfuscation July 2017", "description": "Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.", "url": "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf"}, {"source_name": "GitHub Office-Crackros Aug 2016", "description": "Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.", "url": "https://github.com/itsreallynick/office-crackros"}, {"source_name": "Linux/Cdorked.A We Live Security Analysis", "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.", "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/"}, {"source_name": "Carbon Black Obfuscation Sept 2016", "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.", "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"}, {"source_name": "PaloAlto EncodedCommand March 2017", "description": "White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.", "url": "https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/"}, {"source_name": "capec", "url": "https://capec.mitre.org/data/definitions/267.html", "external_id": "CAPEC-267"}], "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"], "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Red Canary", "Christiaan Beek, @ChristiaanBeek"], "x_mitre_data_sources": ["Process: OS API Execution", "Command: Command Execution", "File: File Creation", "Module: Module Load", "Process: Process Creation", "File: File Metadata"], "x_mitre_defense_bypassed": ["Host Forensic Analysis", "Signature-based Detection", "Host Intrusion Prevention Systems", "Application Control", "Log Analysis"], "x_mitre_deprecated": false, "x_mitre_detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. ", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.3"}, {"type": "attack-pattern", "spec_version": "2.1", "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b", "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "created": "2020-03-02T18:45:07.892Z", "modified": "2022-05-11T14:00:00.188Z", "name": "Phishing", "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "initial-access"}], "external_references": [{"source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1566", "external_id": "T1566"}, {"source_name": "capec", "url": "https://capec.mitre.org/data/definitions/98.html", "external_id": "CAPEC-98"}, {"source_name": "Microsoft Anti Spoofing", "description": "Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.", "url": "https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide"}, {"source_name": "ACSC Email Spoofing", "description": "Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.", "url": "https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf"}], "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"], "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Philip Winther"], "x_mitre_data_sources": ["File: File Creation", "Network Traffic: Network Traffic Content", "Network Traffic: Network Traffic Flow", "Application Log: Application Log Content"], "x_mitre_detection": "Network intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nBecause most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Many possible detections of follow-on behavior may take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "x_mitre_platforms": ["Linux", "macOS", "Windows", "SaaS", "Office 365", "Google Workspace"], "x_mitre_version": "2.2"}, {"type": "attack-pattern", "spec_version": "2.1", "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "created": "2017-05-31T21:30:56.776Z", "modified": "2021-04-29T14:49:39.188Z", "name": "Application Layer Protocol", "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "command-and-control"}], "external_references": [{"source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1071", "external_id": "T1071"}, {"source_name": "University of Birmingham C2", "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"}], "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"], "x_mitre_attack_spec_version": "2.1.0", "x_mitre_data_sources": ["Network Traffic: Network Traffic Flow", "Network Traffic: Network Traffic Content"], "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "2.0"}, {"type": "grouping", "spec_version": "2.1", "id": "grouping--8baec836-7850-4780-80d5-400f508ff234", "created": "2023-03-28T11:28:25.776262Z", "modified": "2023-03-28T11:28:25.776262Z", "context": "Hypothesized Event", "object_refs": ["attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b"]}, {"type": "grouping", "spec_version": "2.1", "id": "grouping--a10cecc7-67b7-4228-ad8c-8d15e41d8723", "created": "2023-03-28T11:28:25.523262Z", "modified": "2023-03-28T11:28:25.523262Z", "context": "Hypothesized Event", "object_refs": ["attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5"]}, {"type": "grouping", "spec_version": "2.1", "id": "grouping--6a8fdf0d-63ec-44fe-86d0-c547dfd24d4d", "created": "2023-03-28T11:28:25.606263Z", "modified": "2023-03-28T11:28:25.606263Z", "context": "Hypothesized Event", "object_refs": ["attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830"]}, {"type": "grouping", "spec_version": "2.1", "id": "grouping--107d40f5-8438-46c0-96af-418010f2e0b7", "created": "2023-03-28T11:28:25.691263Z", "modified": "2023-03-28T11:28:25.691263Z", "context": "Hypothesized Event", "object_refs": ["attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a"]}, {"type": "grouping", "spec_version": "2.1", "id": "grouping--c6f42814-91aa-451a-9ff5-3b8c5b017727", "created": "2023-03-28T11:28:25.859262Z", "modified": "2023-03-28T11:28:25.859262Z", "context": "Hypothesized Event", "object_refs": ["attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6"]}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--42ce0a7d-4425-47d8-b448-5d41ffa20056", "created": "2023-03-28T11:28:25.523262Z", "modified": "2023-03-28T11:28:25.523262Z", "relationship_type": "0.753", "source_ref": "grouping--559ebcf8-6708-48e2-bf42-ab765e3e0f1e", "target_ref": "grouping--a10cecc7-67b7-4228-ad8c-8d15e41d8723"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--81798fce-dcb5-4361-b2de-855535edc1a9", "created": "2023-03-28T11:28:25.606263Z", "modified": "2023-03-28T11:28:25.606263Z", "relationship_type": "0.714", "source_ref": "grouping--559ebcf8-6708-48e2-bf42-ab765e3e0f1e", "target_ref": "grouping--6a8fdf0d-63ec-44fe-86d0-c547dfd24d4d"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--b0e4557e-8246-4486-a8f1-8760007de13f", "created": "2023-03-28T11:28:25.691263Z", "modified": "2023-03-28T11:28:25.691263Z", "relationship_type": "0.713", "source_ref": "grouping--559ebcf8-6708-48e2-bf42-ab765e3e0f1e", "target_ref": "grouping--107d40f5-8438-46c0-96af-418010f2e0b7"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--36e4618e-c087-4d33-9836-dcaa27dfe288", "created": "2023-03-28T11:28:25.861263Z", "modified": "2023-03-28T11:28:25.861263Z", "relationship_type": "0.77", "source_ref": "grouping--6a8fdf0d-63ec-44fe-86d0-c547dfd24d4d", "target_ref": "grouping--a10cecc7-67b7-4228-ad8c-8d15e41d8723"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--11ab1d03-f943-4f3a-b153-4beefb956a32", "created": "2023-03-28T11:28:25.862262Z", "modified": "2023-03-28T11:28:25.862262Z", "relationship_type": "0.794", "source_ref": "grouping--107d40f5-8438-46c0-96af-418010f2e0b7", "target_ref": "grouping--a10cecc7-67b7-4228-ad8c-8d15e41d8723"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--7c973c49-0d38-4114-ba3f-bbcad072ffb6", "created": "2023-03-28T11:28:25.862262Z", "modified": "2023-03-28T11:28:25.862262Z", "relationship_type": "0.817", "source_ref": "grouping--107d40f5-8438-46c0-96af-418010f2e0b7", "target_ref": "grouping--6a8fdf0d-63ec-44fe-86d0-c547dfd24d4d"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--de4ca873-e0b7-4b14-9f58-24e1da1b6c0c", "created": "2023-03-28T11:28:25.863262Z", "modified": "2023-03-28T11:28:25.863262Z", "relationship_type": "0.753", "source_ref": "grouping--8baec836-7850-4780-80d5-400f508ff234", "target_ref": "grouping--a10cecc7-67b7-4228-ad8c-8d15e41d8723"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--9bd67feb-b9da-4a82-b119-0f4e43735b8c", "created": "2023-03-28T11:28:25.863262Z", "modified": "2023-03-28T11:28:25.863262Z", "relationship_type": "0.856", "source_ref": "grouping--8baec836-7850-4780-80d5-400f508ff234", "target_ref": "grouping--6a8fdf0d-63ec-44fe-86d0-c547dfd24d4d"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--99a1d721-eae9-487a-9d10-27345a805804", "created": "2023-03-28T11:28:25.863262Z", "modified": "2023-03-28T11:28:25.863262Z", "relationship_type": "0.726", "source_ref": "grouping--8baec836-7850-4780-80d5-400f508ff234", "target_ref": "grouping--107d40f5-8438-46c0-96af-418010f2e0b7"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--6ac775cb-eec6-4d7b-a3d3-2d9a198deaab", "created": "2023-03-28T11:28:25.864266Z", "modified": "2023-03-28T11:28:25.864266Z", "relationship_type": "0.856", "source_ref": "grouping--c6f42814-91aa-451a-9ff5-3b8c5b017727", "target_ref": "grouping--6a8fdf0d-63ec-44fe-86d0-c547dfd24d4d"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--4336e990-4025-452b-ace3-ea2dcdd04c76", "created": "2023-03-28T11:28:25.864266Z", "modified": "2023-03-28T11:28:25.864266Z", "relationship_type": "0.904", "source_ref": "grouping--c6f42814-91aa-451a-9ff5-3b8c5b017727", "target_ref": "grouping--a10cecc7-67b7-4228-ad8c-8d15e41d8723"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--f759becd-d89f-4b1d-89ac-27c6957b0daf", "created": "2023-03-28T11:28:25.864266Z", "modified": "2023-03-28T11:28:25.864266Z", "relationship_type": "0.726", "source_ref": "grouping--c6f42814-91aa-451a-9ff5-3b8c5b017727", "target_ref": "grouping--107d40f5-8438-46c0-96af-418010f2e0b7"}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--0b7ee88a-55f6-4fb8-9e2e-8afda4029a44", "created": "2023-03-28T11:28:25.864266Z", "modified": "2023-03-28T11:28:25.864266Z", "relationship_type": "0.706", "source_ref": "grouping--c6f42814-91aa-451a-9ff5-3b8c5b017727", "target_ref": "grouping--8baec836-7850-4780-80d5-400f508ff234"}]}